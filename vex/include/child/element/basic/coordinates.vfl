
#ifndef __COORDINATES_VFL__
#define __COORDINATES_VFL__

#include <coordinates.vfl>




function
vector2 cartesiantopolar(
    const vector2 v;
    ) {
    float r = length(v);
    float th = acos(v.x/r);
    vector2 a = set(r,th);
    return a;
}

function
vector2 cartesiantopolar(
    const float f0;
    const float f1;
    ) {
    float r = length(v);
    float th = acos(v.x/r);
    vector2 a = set(r,th);
    return a;
}

function
vector2 cartesiantopolar(const vector2 v;){
    float r = length(v);
    float th = acos(v.x/r);
    vector2 a = set(r,th);
    return a;
}

function
vector cartesiantopolar(vector v){
    float r = length(v);
    float th = acos(v.z/r);
    float phi = atan2(v.y, v.x);
    vector a = set(r,th,phi);
    return a;
}

function
vector2 frompolar(vector2 v){
    float x=v.x*cos(v.y);
    float y=v.x*sin(v.y);
    vector2 a = set(x,y);
    return a;
}

function
vector frompolar(vector v){
    float x=v.x*sin(v.y)*cos(v.z);
    float y=v.x*sin(v.y)*sin(v.z);
    float z=v.x*cos(v.y);
    vector a = set(x,y,z);
    return a;
}

function
vector tocartesian(vector v){
    return frompolar(v); 
}







#endif
